library(StratTourn)
dir = "D:/lehre/cooperation seminar/task1strat"
import.stage1.strats(dir, num.scen)
traceback()
dir = "D:/lehre/cooperation seminar/task1strat"
num.scen = 1
import.stage1.strats(dir, num.scen)
traceback()
restore.point("parse.stage1.Rmd")
library(stringtools)
li = list(file=file)
txt = readLines(file)
li$team.name = find.row(txt,"**Team-Name:**", li)$str
# Extract code for each scenario
li$code = lapply(1:num.scen, function(scen) {
start.row = find.row(txt,paste0("```{r strat_scen",scen))$row
end.row = find.row(txt[-(1:start.row)],"```")$row + start.row
return(txt[(start.row+1):(end.row-1)])
})
li$strat = list()
li$strat.names = rep("",num.scen)
scen = 1
for (scen in 1:num.scen) {
env = new.env()
tryCatch({
eval(parse(text=li$code[[scen]]),env)
fun.name <- ls(env)[1]
li$strat.names[scen] <- fun.name
li$strat[[scen]] <- get(fun.name,env)
}, error = function(e) {
str = paste0("Warning: Could not parse strategy in ", file, " for scenario ", scen, ". Code chunk does not specify a single correct function.")
warning(str, call.=FALSE)
li$strat.names[scen] <<- "NO STRATEGY"
li$strat[[scen]] <<- NA
})
}
names(li$strat) = li$strat.names
import.stage1.strats(dir, num.scen)
game = make.pd.game(err.D.prob = 0.15)
imp = import.stage1.strats(dir, num.scen)
scen.strat = import.stage1.strats(dir, num.scen)
game = make.pd.game(err.D.prob = 0.15)
strat = scen.strat[[1]]$strat
tourn = init.tournament(game=game,strat=strat)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=torun, R=1)
tourn = run.tournament(tourn=tourn, R=1)
tourn
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=1)
tourn
strat = c(scen.strat[[1]]$strat,list(always.defect, always.cooperate)
strat = c(scen.strat[[1]]$strat,nlist(always.defect, always.coop))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=1)
tourn
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=1)
tourn = run.tournament(tourn=tourn, R=10)
tourn
tourn = run.tournament(tourn=tourn, R=10)
tourn
scen.strat[[1]]$team
names(scen.strat[[1]])
cbind(scen.strat$strat.name,scen.strat$team.name)
scen.strat = import.stage1.strats(dir, num.scen)[[1]]
cbind(scen.strat$strat.name,scen.strat$team.name)
cbind(scen.strat$strat.name,scen.strat$team)
tourn
dir = "D:/lehre/cooperation seminar/task1strat"
num.scen = 1
scen.strat = import.stage1.strats(dir, num.scen)[[1]]
cbind(scen.strat$strat.name,scen.strat$team)
game = make.pd.game(err.D.prob = 0.15)
strat = c(scen.strat$strat,nlist(always.defect, always.coop))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
tourn
tourn = run.tournament(tourn=tourn, R=10)
source('D:/libraries/StratTourn/coop1_skstrat.r')
strat = c(scen.strat$strat,nlist(always.defect, always.coop, net.nice0))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
tourn
tourn = run.tournament(tourn=tourn, R=3)
tourn
tourn = run.tournament(tourn=tourn, R=3)
tourn
tourn = run.tournament(tourn=tourn, R=3)
tourn
strat = c(scen.strat$strat,nlist(net.nice1,net.nice2, net.nice0))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=3)
tourn
tourn = run.tournament(tourn=tourn, R=3)
tourn
tourn = run.tournament(tourn=tourn, R=3)
tourn
source('D:/libraries/StratTourn/coop1_skstrat.r')
strat = c(nlist(net.nice1,net.nice2, net.nice0, net.nice1.killer, net.nice2.killer))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=3)
tourn
source('D:/libraries/StratTourn/coop1_skstrat.r')
strat = c(nlist(net.nice1,net.nice2, net.nice0, net.nice.3,net.nice1.killer, net.nice2.killer))
set.storing(FALSE)
source('D:/libraries/StratTourn/coop1_skstrat.r')
strat = c(nlist(net.nice1,net.nice2, net.nice0, net.nice.3,net.nice1.killer, net.nice2.killer))
strat = c(nlist(net.nice1,net.nice2, net.nice0, net.nice3,net.nice1.killer, net.nice2.killer))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=3)
tourn
tourn = run.tournament(tourn=tourn, R=3)
tourn
tourn = run.tournament(tourn=tourn, R=3)
tourn
tourn = run.tournament(tourn=tourn, R=10)
tourn
source('D:/libraries/StratTourn/coop1_skstrat.r')
source('D:/libraries/StratTourn/coop1_skstrat.r')
source('D:/libraries/StratTourn/coop1_skstrat.r')
strat = c(nlist(net.nice1,net.nice2, net.nice0, net.nice0.5,net.nice1.killer, net.nice2.killer))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
tourn
strat = c(nlist(net.nice1,net.nice2, net.nice0, net.nice0.5,net.nice1.killer))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
tourn
source('D:/libraries/StratTourn/coop1_skstrat.r')
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
tourn
strat = c(nlist(net.nice1,net.nice2, net.nice0, net.nice0.5,net.nice0.8,net.nice1.killer))
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=1)
tourn
tourn = run.tournament(tourn=tourn, R=1)
tourn
tourn = run.tournament(tourn=tourn, R=1)
tourn
tourn = run.tournament(tourn=tourn, R=10)
tourn
tourn = run.tournament(tourn=tourn, R=10)
tourn
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
tourn
tourn = run.tournament(tourn=tourn, R=10)
tourn
source('D:/libraries/StratTourn/coop1_skstrat.r')
source('D:/libraries/StratTourn/StratTourn/R/battle_of_strategies.r')
source('D:/libraries/StratTourn/StratTourn/R/rep_game.r')
dir = "D:/lehre/cooperation seminar/task1strat"
num.scen = 1
scen.strat = import.stage1.strats(dir, num.scen)[[1]]
cbind(scen.strat$strat.name,scen.strat$team)
game = make.pd.game(err.D.prob = 0.15)
strat = c(scen.strat$strat,nlist(nn))
set.storing(TRUE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
gbos$do.store
source('D:/libraries/StratTourn/StratTourn/R/battle_of_strategies.r')
source('D:/libraries/StratTourn/StratTourn/R/battle_of_strategies.r')
source('D:/libraries/StratTourn/StratTourn/R/battle_of_strategies.r')
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95)
tourn = run.tournament(tourn=tourn, R=10)
tourn
tourn = run.tournament(tourn=tourn, R=10)
tourn
tourn = run.tournament(tourn=tourn, R=10)
library("compiler", lib.loc="d:/programs/R/library")
enableJIT(3)
tourn = run.tournament(tourn=tourn, R=10)
tourn
cbind(scen.strat$strat.name,scen.strat$team)
source('D:/libraries/StratTourn/coop1_skstrat.r')
source('D:/libraries/StratTourn/StratTourn/R/battle_of_strategies.r')
source('D:/libraries/StratTourn/StratTourn/R/battle_of_strategies.r')
source('D:/libraries/StratTourn/StratTourn/R/battle_of_strategies.r')
scen.strat = import.stage1.strats(dir, num.scen)[[1]]
cbind(scen.strat$strat.name,scen.strat$team)
game = make.pd.game(err.D.prob = 0.15)
strat = c(scen.strat$strat,nlist(nn))
team.name = c(scen.strat$team,"prof")
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95, team=team)
team = c(scen.strat$team,"prof")
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95, team=team)
enableJIT(3)
tourn = run.tournament(tourn=tourn, R=10)
source('D:/libraries/StratTourn/StratTourn/R/battle_of_strategies.r')
tourn
tourn
team = substring(c(scen.strat$team,"prof"),1,8)
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95, team=team)
enableJIT(3)
tourn = run.tournament(tourn=tourn, R=10)
tourn
save.tournament(tourn,file="task1_tourn.Rdata")
setwd("D:/lehre/cooperation seminar/")
save.tournament(tourn,file="task1_tourn.Rdata")
tourn = run.tournament(tourn=tourn, R=100)
tourn
tourn
save.tournament(tourn,file="task1_tourn.Rdata")
tourn = run.tournament(tourn=tourn, R=50)
save.tournament(tourn,file="task1_tourn.Rdata")
tourn
tourn = run.tournament(tourn=tourn, R=50)
save.tournament(tourn,file="task1_tourn.Rdata")
tourn = run.tournament(tourn=tourn, R=100)
save.tournament(tourn,file="task1_tourn.Rdata")
tourn
dir = "D:/lehre/cooperation seminar/task1strat"
num.scen = 1
scen.strat = import.stage1.strats(dir, num.scen)[[1]]
cbind(scen.strat$strat.name,scen.strat$team)
game = make.pd.game(err.D.prob = 0.15)
strat = c(scen.strat$strat,nlist(nn))
team = substring(c(scen.strat$team,"prof"),1,8)
team
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95, team=team)
enableJIT(3)
tourn = run.tournament(tourn=tourn, R=100)
tourn
setwd("D:/lehre/cooperation seminar/")
save.tournament(tourn,file="task1_tourn.Rdata")
tourn = run.tournament(tourn=tourn, R=100)
setwd("D:/lehre/cooperation seminar/")
save.tournament(tourn,file="task1_tourn.Rdata")
tourn
tourn
tourn
tourn = run.tournament(tourn=tourn, R=100)
tourn
save.tournament(tourn,file="task1_tourn.Rdata")
tourn = run.tournament(tourn=tourn, R=400)
setwd("D:/lehre/cooperation seminar/")
save.tournament(tourn,file="task1_tourn.Rdata")
tourn
t = load.tournament(file="task1_tourn.Rdata")
t
library(StratTourn)
tourn = run.tournament(tourn=tourn, R=300)
tourn
set.storing(FALSE)
tourn = init.tournament(game=game,strat=strat, delta=0.95, team=team)
enableJIT(3)
tourn = run.tournament(tourn=tourn, R=300)
save.tournament(tourn,file="task1_tourn.Rdata")
tourn
